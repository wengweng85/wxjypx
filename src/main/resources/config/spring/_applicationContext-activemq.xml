<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	">
	<!-- 连接池  -->
	<bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory" destroy-method="stop">
		<property name="connectionFactory">
			<bean class="org.apache.activemq.ActiveMQConnectionFactory">
				<property name="brokerURL" value="${activemq.brokerURL}" />
			</bean>
		</property>
	</bean>
	<!-- 连接工厂 -->
	<bean id="activeMQConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="${activemq.brokerURL}" />
	</bean>
	
	<!-- queue -->
	<!-- 配置消息目标 queue -->
	<bean id="queuedestination" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg index="0" value="${activemq.destination.queue.arg}" />
	</bean>

	<!-- 消息模板 queue  -->
	<bean id="jmsQueueTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="activeMQConnectionFactory" />
		<property name="defaultDestination" ref="queuedestination" />
		<property name="messageConverter">
			<bean class="org.springframework.jms.support.converter.SimpleMessageConverter" />
		</property>
	</bean>
	
	<!-- 配置消息队列监听者（Queue） -->
    <bean id="jmsQueueMessageListener" class="com.insigma.mvc.serviceimp.jms.listener.queue.JmsQueueMessageListener" />
    
    
    <!-- 显示注入消息监听容器（Queue），配置连接工厂，监听的目标是queuedestination，监听器是上面定义的监听器 -->
    <bean id="queueListenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="activeMQConnectionFactory" />
        <property name="destination" ref="queuedestination" />
        <property name="messageListener" ref="jmsQueueMessageListener" />
    </bean>
    
    
    
    
    <!-- topic -->
	<!-- 配置消息目标 topic -->
	<bean id="topicdestination"  class="org.apache.activemq.command.ActiveMQTopic">     
        <!-- 设置消息队列的名字 -->   
        <constructor-arg index="0" value="${activemq.destination.topic.arg}" />   
    </bean>   
	
	<!-- 消息模板 topic -->  
    <bean id="jmsTopicTemplate" class="org.springframework.jms.core.JmsTemplate">  
         <!-- 引用自定义的 ConnectionFactory对象 -->    
        <constructor-arg ref="activeMQConnectionFactory" />  
        <!-- pub/sub模型（发布/订阅） -->  
        <property name="pubSubDomain" value="true" />  
        <!-- 默认目标名称（订阅名） -->  
        <property name="defaultDestination" ref="topicdestination" /> 
        <property name="receiveTimeout" value="10000" />
        <!-- deliveryMode, priority, timeToLive 的开关要生效，必须配置为true，默认false-->
        <property name="explicitQosEnabled" value="true"/>
        <!-- 发送模式
             DeliveryMode.NON_PERSISTENT=1:非持久 ;
             DeliveryMode.PERSISTENT=2:持久
        -->
        <property name="deliveryMode" value="1"/> 
        
    </bean>  
    
    <!-- 配置消息队列监听者（topic） -->
    <bean id="jmsTopicMessageListenerClientA" class="com.insigma.mvc.serviceimp.jms.listener.topic.JmsTopicMessageListenerCleintA" />
    <bean id="jmsTopicMessageListenerClientB" class="com.insigma.mvc.serviceimp.jms.listener.topic.JmsTopicMessageListenerCleintB" />
    
    
    <!-- 显示注入消息监听容器（topic），配置连接工厂，监听的目标是topicdestination，监听器是上面定义的监听器 -->
    <bean id="topicListenerContainerCleintA" class="org.springframework.jms.listener.DefaultMessageListenerContainer">       
        <property name="connectionFactory" ref="activeMQConnectionFactory" />   
        <property name="pubSubDomain" value="true"/><!-- default is false -->     
        <property name="destination" ref="topicdestination" />  <!-- listen topic: syxTopic -->     
        <property name="subscriptionDurable" value="true"/>      
        <property name="messageListener" ref="jmsTopicMessageListenerClientA" /><!-- 消息监听类 -->  
        <!---这里是设置接收客户端的ID，在持久化时，但这个客户端不在线时，消息就存在数据库里，直到被这个ID的客户端消费掉-->
        <property name="clientId" value="consumerClientA"/> 
        <!-- 消息应答方式
             Session.AUTO_ACKNOWLEDGE  消息自动签收
             Session.CLIENT_ACKNOWLEDGE  客户端调用acknowledge方法手动签收
             Session.DUPS_OK_ACKNOWLEDGE 不必必须签收，消息可能会重复发送
        -->
        <property name="sessionAcknowledgeMode" value="1"/>   
    </bean> 
    
    
    <!-- 显示注入消息监听容器（tpoic），配置连接工厂，监听的目标是topicdestination，监听器是上面定义的监听器 -->
    <bean id="topicListenerContainerCleintB" class="org.springframework.jms.listener.DefaultMessageListenerContainer">       
        <property name="connectionFactory" ref="activeMQConnectionFactory" />   
        <property name="pubSubDomain" value="true"/><!-- default is false -->     
        <property name="destination" ref="topicdestination" />  <!-- listen topic: syxTopic -->     
        <property name="subscriptionDurable" value="true"/>      
        <property name="messageListener" ref="jmsTopicMessageListenerClientB" /><!-- 消息监听类 -->  
        <!---这里是设置接收客户端的ID，在持久化时，但这个客户端不在线时，消息就存在数据库里，直到被这个ID的客户端消费掉-->
        <property name="clientId" value="consumerClientB"/> 
        <!-- 消息应答方式
             Session.AUTO_ACKNOWLEDGE  消息自动签收
             Session.CLIENT_ACKNOWLEDGE  客户端调用acknowledge方法手动签收
             Session.DUPS_OK_ACKNOWLEDGE 不必必须签收，消息可能会重复发送
        -->
        <property name="sessionAcknowledgeMode" value="1"/>   
    </bean>    
</beans>